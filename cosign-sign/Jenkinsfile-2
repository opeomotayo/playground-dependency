pipeline {
  
    agent {
    kubernetes {
      label 'default docker build-pod'
      defaultContainer 'docker'
      yamlFile 'build-pod.yaml'
    }
  }

  options {
      buildDiscarder(logRotator(numToKeepStr: '3'))
   }

  environment {
    GITHUB_TOKEN=credentials('github')
    IMAGE_NAME='opeomotayo/jenkins-cosign-poc'
    IMAGE_VERSION='8.5-204'
    COSIGN_PASSWORD=credentials('cosign-password')
    COSIGN_PRIVATE_KEY=credentials('cosign-private-key')
  }
  stages {
    stage('cleanup') {
      steps {
        sh 'docker system prune -a --volumes --force'
      }
    }
    stage('build image') {
      steps {
        sh 'docker build -t $IMAGE_NAME:$IMAGE_VERSION ./cosign-sign'
      }
    }
    stage('login to GHCR') {
      steps {
        sh 'echo "$GITHUB_TOKEN_PSW" | docker login ghcr.io -u $GITHUB_TOKEN_USR --password-stdin'
      }
    }
    stage('tag image') {
      steps {
        sh 'docker tag $IMAGE_NAME:$IMAGE_VERSION ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('push image') {
      steps {
        sh 'docker push ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('sign the container image') {
      steps {
        container('cosign'){
          sh 'echo "$GITHUB_TOKEN_PSW" | docker login ghcr.io -u $GITHUB_TOKEN_USR --password-stdin'
          sh 'cosign version'
          sh 'cosign sign --key $COSIGN_PRIVATE_KEY ghcr.io/$IMAGE_NAME:$IMAGE_VERSION'
        }
      }
    }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}

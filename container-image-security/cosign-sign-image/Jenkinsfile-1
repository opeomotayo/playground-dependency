pipeline {
  
  agent {
    kubernetes {
      label 'default docker build-pod'
      defaultContainer 'docker'
      yamlFile 'build-pod.yaml'
    }
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '3'))
  }

   environment {
    DOCKER_HUB=credentials('dockerhub-cred')
    IMAGE_NAME='opeomotayo/java-docker'
    IMAGE_VERSION='latest'
  }
  stages {
    stage('Delete Image If Exists') {
      steps {
        dir('container-image-security/cosign-sign-image'){
          sh 'docker rmi $IMAGE_NAME:$IMAGE_VERSION || (echo "Image $IMAGE_NAME:$IMAGE_VERSION does not exist so not removed."; exit 0)'
          sh 'docker system prune -a --volumes --force'
        }
      }
    }
    stage('Create Container Image') {
      steps {
        dir('container-image-security/cosign-sign-image'){
          sh 'docker build --tag $IMAGE_NAME:$IMAGE_VERSION .'
          sh 'docker image ls'
        }
      }
    }
    stage('Run Vulnerability Scan') {
      steps {
        dir('container-image-security/cosign-sign-image'){
          container('security-tools'){
            // sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
            sh 'grype $IMAGE_NAME:$IMAGE_VERSION --scope AllLayers' //--fail-on=critical
          }
        }
      }
    }
    stage('push image') {
      steps {
        sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
        sh 'docker push $IMAGE_NAME:$IMAGE_VERSION'
      }
    }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}
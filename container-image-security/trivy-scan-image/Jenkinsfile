pipeline {
  agent {
    kubernetes {
      label 'default maven build-pod'
      defaultContainer 'docker'
      yamlFile 'build-pod.yaml'
    }
  }

  environment {
    DOCKER_HUB=credentials('dockerhub-cred')
    IMAGE_NAME='opeomotayo/java-image'
    IMAGE_VERSION='latest'
    COSIGN_PASSWORD=credentials('cosign-password')
    COSIGN_PRIVATE_KEY=credentials('cosign-private-key')
    COSIGN_PUBLIC_KEY=credentials('cosign-public-key')
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: '3'))
  }

  stages {
    stage('Delete Image If Exists') {
      steps {
          sh 'docker rmi $IMAGE_NAME:$IMAGE_VERSION || (echo "Image $IMAGE_NAME:$IMAGE_VERSION does not exist so not removed."; exit 0)'
          sh 'docker system prune -a --volumes --force'
      }
    }
    stage('Create Container Image') {
      steps {
        dir('container-image-security/trivy-scan-image'){
          sh 'docker build --tag $IMAGE_NAME:$IMAGE_VERSION .'
          sh 'docker image ls'
        }
      }
    }
    stage('Run Vulnerability Scan') {
      steps {
          container('security-tools'){
            sh 'grype $IMAGE_NAME:$IMAGE_VERSION --scope AllLayers' //--fail-on=critical
          }
      }
    }
    stage('Publish Container Image') {
      steps {
        sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
        sh 'docker push $IMAGE_NAME:$IMAGE_VERSION'
      }
    }
    stage('Generate SBOM') {
      steps {
        dir('container-image-security/trivy-scan-image'){
          container('security-tools'){
            sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
            // sh 'trivy image --no-progress --exit-code 0 --skip-update --severity MEDIUM,HIGH,CRITICAL $IMAGE_NAME:$IMAGE_VERSION'
            sh 'trivy image --format spdx --output java-image-sbom.spdx $IMAGE_NAME:$IMAGE_VERSION' // cyclonedx, json
            sh 'cat java-image-sbom.spdx'
          }
        }
      }
    }
    stage('Scan SBOM Vulnerabilities') {
      steps {
        dir('container-image-security/trivy-scan-image'){
          container('security-tools'){
            sh 'trivy sbom java-image-sbom.spdx'
          }
        }
      }
    }
    stage('Attest Image SBOM') {
      steps {
        dir('container-image-security/trivy-scan-image'){
          container('security-tools'){
            sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
            sh 'cosign version'
            sh 'cosign attest --key $COSIGN_PRIVATE_KEY --type spdx --predicate java-image-sbom.spdx $IMAGE_NAME:$IMAGE_VERSION'
          }
        }
      }
    }
    stage('Verify Attestation') {
      steps {
        dir('container-image-security/trivy-scan-image'){
          container('security-tools'){
            sh 'echo "$DOCKER_HUB_PSW" | docker login -u $DOCKER_HUB_USR --password-stdin'
            sh 'cosign version'
            sh 'cosign verify-attestation --key $COSIGN_PUBLIC_KEY $IMAGE_NAME:$IMAGE_VERSION'
          }
        }
      }
    }
  }
}